[loadI 1024 => r41; loadI 2 => r42]
[store r42 => r41; loadI 1028 => r39]
[loadI 3 => r40; loadI 1024 => r7]
[store r40 => r39; loadI 1028 => r4]
[loadI 1032 => r38; loadI 5 => r37]
[store r37 => r38; loadI 2 => r31]
[load r7 => r9; loadI 8192 => r32]
[loadI 1 => r33; loadI 4104 => r34]
[load r4 => r6; loadI 6 => r35]
[store r35 => r34; loadI 2048 => r36]
[store r37 => r36; loadI 4 => r15]
[store r33 => r32; sub r9, r31 => r30]
[loadI 1 => r26; mult r30, r15 => r28]
[sub r6, r26 => r25; loadI 2048 => r29]
[loadI 1032 => r0; mult r25, r15 => r23]
[load r0 => r2; loadI 8192 => r21]
[load r21 => r19; add r28, r29 => r27]
[load r27 => r20; loadI 4096 => r24]
[add r23, r24 => r22; loadI 3 => r16]
[load r22 => r17; loadI 16384 => r13]
[sub r2, r16 => r14; loadI 1 => r3]
[add r9, r3 => r8; mult r14, r15 => r12]
[add r6, r3 => r5; mult r19, r20 => r18]
[add r2, r3 => r1; nop]
[add r12, r13 => r10; nop]
[add r17, r18 => r11; nop]
[store r11 => r10; nop]
[store r8 => r7; nop]
[store r5 => r4; nop]
[store r1 => r0; nop]
[nop; nop]
[nop; nop]
[output 1024; nop]
[output 1028; nop]
[output 1032; nop]
[output 16392; nop]
